import numpy as np

def calc_HandEye(Mat_Hand:list, Mat_Eye:list) -> np.ndarray:
    """Calculate the transformation matrix of an eye-in-hand system

    Reference
    ----------
    Park, Frank C., and Bryan J. Martin. “Robot sensor calibration: solving AX=XB on the Euclidean group.” IEEE Transactions on Robotics and Automation10.5 (1994): 717-721.

    Parameters
    ----------
    Mat_Hand : list
        Each entry in the list is a 4x4 transformation matrix from the arm base to the end point of the arm
    Mat_Eye : list
        Each entry in the list is a 4x4 transformation matrix from the camera coordinate to the fixed arucode coordinate

    Returns
    -------
    np.ndarray shape=(4,4)
        The transformation matrix from the end point of the arm to the camera
    """
    T = np.eye(4)
    A = []
    B = []

    # for mat in Mat_Hand:
    #     assert mat.shape==(4,4)
    # for mat in Mat_Eye:
    #     assert mat.shape==(4,4)

    assert len(Mat_Hand) == len(Mat_Eye)
    n = len(Mat_Hand)
    for i in range(n):
        for j in range(i+1, n):
            A.append(np.linalg.inv(Mat_Hand[i]) @ Mat_Hand[j])
            B.append(Mat_Eye[i] @ np.linalg.inv(Mat_Eye[j]))

    def Rodrigues(matrix):
        theta = np.arccos((np.trace(matrix) - 1.) / 2.0)
        w = (matrix - matrix.T) / (2. * np.sin(theta))
        return np.array([[-w[1,2], w[0,2], -w[0,1]]]).T * theta

    M = np.zeros((3,3))
    for a, b in zip(A, B):
        M += Rodrigues(b[:3,:3]) @ Rodrigues(a[:3,:3]).T

    MTM = M.T @ M
    v, Q = np.linalg.eig(MTM)
    R = (Q @ np.diag(1. / np.sqrt(v)) @ np.linalg.inv(Q)) @ M.T

    CTC = np.zeros((3,3))
    CTD = np.zeros((3,1))
    for a, b in zip(A, B):
        c = np.eye(3) - a[:3,:3]
        d = a[:3,3:] - (R @ b[:3,3:])
        CTC += c.T @ c
        CTD += c.T @ d
    
    T[:3,:3] = R
    T[:3,3:] = np.linalg.inv(CTC) @ CTD

    return T


""" A simple example, collecting data from simulator mujoco using manipulator Arx5 """
if __name__ == "__main__":
    Harr = np.array([[[0.7876734512044511, -0.2840497235634248, 0.5467049376137106, 0.3738399529229479], [0.23372299141241226, 0.958809345766181, 0.16142553006467605, -0.22689475927012812], [-0.5700386807514931, 0.0006269090604613115, 0.8216176175278418, 0.3553411088377433], [0.0, 0.0, 0.0, 1.0]], [[0.8758979133665454, 0.0008617321814952501, 0.48249570234125294, 0.40036259508720823], [-0.0007499433107700925, 0.9999996286583097, -0.0004245801143044236, -0.0007515083176427545], [-0.48249588904483137, 1.0044411730033748e-05, 0.8758982343594189, 0.4003775232708719], [0.0, 0.0, 0.0, 1.0]], [[0.8123029795671578, 0.2650459531576674, 0.519532974989135, 0.38863841701782187], [-0.21543829627953015, 0.9641341851361545, -0.15502133255786651, 0.10681169513400098], [-0.5419872783400832, 0.01399699134053127, 0.8402701198727243, 0.34577109705160153], [0.0, 0.0, 0.0, 1.0]], [[0.8134087029356157, 0.3077597593830711, 0.4936093723715884, 0.3792491708574923], [-0.09350119493579395, 0.9067153390932481, -0.4112478819381259, 0.23039343221756095], [-0.5741287386415853, 0.2883595400840594, 0.7663060531591356, 0.3911720606543383], [0.0, 0.0, 0.0, 1.0]], [[0.8267351165956282, -0.012978512509419338, 0.5624416460404192, 0.5785468953252447], [-0.0006117574784516022, 0.9997125415307329, 0.023967896423137833, 0.07694133219440447], [-0.5625910350693484, -0.020159179527092647, 0.8264895248824353, 0.30242305960460225], [0.0, 0.0, 0.0, 1.0]], [[0.7548530413703729, 0.5743839603574958, 0.31667009965883575, 0.5785521949024458], [0.20958445413905807, 0.2462641668755278, -0.9462707417522404, -0.0970602341566], [-0.6215072344849505, 0.7806644773506356, 0.0655113065487771, 0.3023294026469322], [0.0, 0.0, 0.0, 1.0]], [[0.8954477265288789, -0.10435368086058855, 0.43276284307355717, 0.20887090373049372], [0.09012637756087316, 0.9945018008975125, 0.053323579018659126, -0.16119666471771393], [-0.4359479385454378, -0.00874513021347706, 0.8999293958836617, 0.45365042338004286], [0.0, 0.0, 0.0, 1.0]], [[0.9359948763116347, 0.0007118575887493535, 0.3520129042764499, 0.10088824320186483], [-0.0006608691624161714, 0.9999997465105531, -0.00026501090509399876, -5.751734149898852e-06], [-0.3520130036949174, 1.5414376125830295e-05, 0.9359951094915396, 0.4060473339462858], [0.0, 0.0, 0.0, 1.0]], [[0.8989667768149135, 0.0007310166653020989, 0.43801620951471776, 0.1986096447533726], [-0.0005721730183260412, 0.9999997139841165, -0.0004946207867392199, -0.00023983103150809756], [-0.43801644581116267, 0.00019402659772684537, 0.8989669379641481, 0.40573555458078314], [0.0, 0.0, 0.0, 1.0]], [[0.8502734946711024, 0.0007740771376892374, 0.5263405599651005, 0.2977007435234023], [-0.0004732360769511936, 0.9999996386711483, -0.0007061906174658949, -0.00047983235609113783], [-0.5263409164290822, 0.0003513718224784914, 0.850273553763985, 0.4061068210993265], [0.0, 0.0, 0.0, 1.0]], [[0.7990556323528697, 0.0008303058832132011, 0.6012565234550856, 0.39860247874920984], [-0.000364691971196628, 0.9999995318376881, -0.0008962835325927223, -0.0007285843014002969], [-0.6012569861589316, 0.0004969069781696746, 0.7990555610710265, 0.4086875599264994], [0.0, 0.0, 0.0, 1.0]]])
    Earr = np.array([[[-0.9180543568090966, -0.381995938845909, 0.10609100173468505, -0.030333977192640305], [-0.09812647037190941, 0.4782138680438664, 0.872744345282669, -0.11582379788160324], [-0.38411898385290355, 0.7908164130288119, -0.4765102382195547, 0.707948625087738], [0.0, 0.0, 0.0, 1.0]], [[-0.9908427544707863, -0.12828481415850046, 0.04211463366888127, -0.08413264155387878], [-0.02451503129080867, 0.477654713485081, 0.8782055499291131, -0.1791439652442932], [-0.1327766890442586, 0.8691311645211005, -0.476425618228743, 0.6610645055770874], [0.0, 0.0, 0.0, 1.0]], [[-0.9887356294885118, 0.1470919824114666, 0.02767315829863347, -0.024380944669246674], [0.10425389045497684, 0.5441649929793856, 0.83247557726383, -0.051937952637672424], [0.10739171897757348, 0.8259832983335741, -0.5533702283002148, 0.6887981295585632], [0.0, 0.0, 0.0, 1.0]], [[-0.9377091462707526, 0.2058142893166589, 0.2798964724916253, -0.21933500468730927], [0.34727717561949334, 0.5320705449835276, 0.7722043113416811, 0.03182263299822807], [0.010006012888462118, 0.8213047019675529, -0.5704020215883402, 0.7002874612808228], [0.0, 0.0, 0.0, 1.0]], [[-0.9886748281287621, -0.1467499725626163, 0.03140907157867469, -0.1309516876935959], [-0.05597089748677105, 0.5547568925281601, 0.830127730428893, -0.12465143948793411], [-0.1392456206100871, 0.8189683972812203, -0.5566879030440135, 0.467239648103714], [0.0, 0.0, 0.0, 1.0]], [[-0.25544210299719633, 0.5754255653040424, 0.7769393482189543, -0.10907085239887238], [0.9336751011879659, 0.3554422430393763, 0.043722045752445315, 0.09878090023994446], [-0.2509982817431461, 0.7365773758795885, -0.628055436967413, 0.4902360439300537], [0.0, 0.0, 0.0, 1.0]], [[-0.9747385545065343, -0.20940005616205287, 0.07769405921845582, -0.015362349338829517], [0.003072655263931079, 0.33525442323129934, 0.9421226196697953, -0.29976487159729004], [-0.22332780648217734, 0.9185619675248794, -0.32614199770756486, 0.8377410769462585], [0.0, 0.0, 0.0, 1.0]], [[-0.9897249546155523, -0.1380011734059295, 0.03741911743787783, -0.11251138895750046], [-0.011262324487834971, 0.33612773959592507, 0.9417490656864307, -0.18923716247081757], [-0.1425400794807335, 0.9316511250531074, -0.33422822581120465, 0.904444694519043], [0.0, 0.0, 0.0, 1.0]], [[-0.990202684416248, -0.13148833087562903, 0.047004921214679696, -0.10281742364168167], [-0.01283872347256785, 0.420924293461482, 0.9070049097736725, -0.14048947393894196], [-0.13904607493364232, 0.8975152132512818, -0.4184885076415536, 0.8350463509559631], [0.0, 0.0, 0.0, 1.0]], [[-0.9899361637189107, -0.12959584571658594, 0.056844599870955435, -0.09463058412075043], [-0.017911309672499362, 0.5131987811454765, 0.8580828608104308, -0.09773744642734528], [-0.1403765534101119, 0.8484290941521279, -0.5103552639572732, 0.7660389542579651], [0.0, 0.0, 0.0, 1.0]], [[-0.9900197607232869, -0.12461817145503783, 0.06581173695176833, -0.08771517872810364], [-0.02063412343074246, 0.5901315537630017, 0.8070433583169558, -0.08429695665836334], [-0.13940985018158092, 0.7976309049908161, -0.586813286383225, 0.696952223777771], [0.0, 0.0, 0.0, 1.0]]])
    HE = calc_HandEye(Harr, Earr)    
    print(HE)

    # Reference :
    # [[-0.01276  0.      -0.99992 -0.11025]
    #  [-0.99992  0.       0.01276 -0.01859]
    #  [-0.       1.       0.       0.07   ]
    #  [ 0.       0.       0.       1.     ]]